console.log("Hello from JavaScript!");

function displayQuiz(){
    const questions = [
        // QUESTION 1 //
        {
            question: "You arrive at Floof Port to meet your travel companion. Who is it?",
            choices: [
                "A cheeky corgi with too much energy",
                "A calm, sleepy cat that loves cuddles",
                "A squeaky guinea pig in a pouch",
                "I dont have one yet but Im looking to adopt",
                "I came alone but love being around pets!"],
            weights: [
                {experienceScore: +2, mindsetScore: +1 }, // Weight for 1st choice
                {experienceScore: +1, mindsetScore: +3 }, // Weight for 2nd choice
                {experienceScore: +0, mindsetScore: +2 }, // Weight for 3rd choice
                {experienceScore: +0, mindsetScore: +0 }, // Weight for 4th choice
                {experienceScore: +0, mindsetScore: +3 }, // Weight for 5th choice
                ]
        },
        // QUESTION 2 //
        {
            question: "You and your companion are off to the Floof Market. What’s the first thing you buy?",
            choices: [
                "Sparkly treats and snacks",
                "A waterproof adventure jacket",
                "A premium brush and shampoo set",
                "A potion that says “Just In Case...”",
                "A journal to record your memories"],
            weights: [
                {protectionScore: +0, mindsetScore: +1 }, // Weight for 1st choice
                {protectionScore: +1, mindsetScore: +0 }, // Weight for 2nd choice
                {protectionScore: +1, mindsetScore: +2 }, // Weight for 3rd choice
                {protectionScore: +2, mindsetScore: +2 }, // Weight for 4th choice
                {protectionScore: +0, mindsetScore: +3 }, // Weight for 5th choice
                ]
        },
        // TO DO: add more qns //
    ]

    // variables for scores //
    let currentQuestionIndex = 0;
    let protectionScore = 0;    // low, medium, high            | weights +0,1,2
    let budgetScore = 0;        // low, medium, high            | weights +0,1,2
    let experienceScore = 0;    // new, moderate, experienced   | weights +0,1,2
    let mindsetScore = 0;       // practical, playful, legacy, emotional    | weights +0,1,2,3
    let contactScore =0;        // yes, maybe, no               | weights +0,1,2

    ////////////////////////////
    // display question image //
    ////////////////////////////
    function displayQuestionImage(questionIndex){
        const imageURLs = [
            "6.png",
            "6.png",
            "6.png",
            "6.png",
            "6.png",
            "6.png",
            "6.png",
            "6.png",
            "6.png",
            "6.png",];
        const questionImageElement = document.getElementById('question-image');
        questionImageElement.src = imageURLs[questionIndex];
    }

    ///////////////////////////////
    // Event - begin quiz button //
    ///////////////////////////////

    document.getElementById('begin-quiz').addEventListener('click', function() {
        document.getElementById('home').style.display = 'none';
        document.getElementById('quiz-page').style.display = 'block';
    });

    ////////////////////////////////////////////////////////
    // Function to display the current question & choices // - copied, not fully checked
    ////////////////////////////////////////////////////////
     function displayCurrentQuestion() {
        const currentQuestion = questions[currentQuestionIndex];
        const questionElement = document.getElementById('question');
        // const progressImageElement = document.getElementById('question-progress-image');
        const choiceContainers = document.getElementById('choices');
        
        choiceContainers.innerHTML = '';
        
        questionElement.textContent = currentQuestion.question;
        // progressImageElement.src = getQuestionProgressImage(currentQuestionIndex);
        updateProgressBar();

        displayQuestionImage(currentQuestionIndex);

        currentQuestion.choices.forEach((choice, index) => {
            //Buttons for choices
            const button = document.createElement('button');
            button.textContent = choice;
            button.classList.add('choices');
            button.addEventListener('click', () => handleChoiceClick(index));
            choiceContainers.appendChild(button);
        });
        }


    //////////////////////////////////
    // Function to get progress bar //
    //////////////////////////////////

    // TO DO: update inside showQuestion() or displayCurrentQuestion()
    function updateProgressBar() {
        const progress = ((currentQuestion) / questions.length) * 100;
        document.getElementById("progress-bar").style.width = progress +"%";
        document.getElementById("progress-text").innerText = Math.round(progress) + "%";
    }

    /////////////////////////////////////
    // Function to handle choice click // - copied, not fully checked
    /////////////////////////////////////
    function handleChoiceClick(choiceIndex) {
        // Update scores based on user response
        const currentQuestion = questions[currentQuestionIndex];
        const selectedChoiceWeight = currentQuestion.weights[choiceIndex];
        console.log("Selected choice weight:", selectedChoiceWeight);

            //Update scores based on weight of selected choice
            if (selectedChoiceWeight.hasOwnProperty('protectionScore')) {
                protectionScore += selectedChoiceWeight.protectionScore;
            }
            if (selectedChoiceWeight.hasOwnProperty('budgetScore')) {
                budgetScore += selectedChoiceWeight.budgetScore;
            }
            if (selectedChoiceWeight.hasOwnProperty('experienceScore')) {
                experienceScore += selectedChoiceWeight.experienceScore;
            }
            if (selectedChoiceWeight.hasOwnProperty('mindsetScore')) {
                mindsetScore += selectedChoiceWeight.mindsetScore;
            }
            if (selectedChoiceWeight.hasOwnProperty('contactScore')) {
                contactScore += selectedChoiceWeight.contactScore;
            }

        //Move to the next question
        currentQuestionIndex++;

        if (currentQuestionIndex < questions.length) {
            displayCurrentQuestion();
        } else {
            calculateAndDisplayResult();
        }
    }

    ////////////////////////////////////////////
    // Function to calculate & display result //
    ////////////////////////////////////////////
    function calculateAndDisplayResult(){
        alert("eheheheh under construction");
    }

    /////////////////////////////////////////////////////
    // Event - display the 1st qn when the quiz starts //
    /////////////////////////////////////////////////////
    displayCurrentQuestion();
    document.addEventListener('DOMContentLoaded', () => {
        const choiceContainers = document.querySelectorAll('.choice-container');
            choiceContainers.forEach((container) => {
                const choices = container.querySelectorAll('button');
                choices.forEach((choice, choiceIndex) => {
                    choice.addEventListener('click', () => {
                    handleChoiceClick(choiceIndex);
                    });
                });
            });
    });

}



// Start the quiz
displayQuiz();
